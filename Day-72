
# Day 72 - 100 Days of Code

Despite a hectic day at college, I managed to solve one linked list problem today.

---

## ‚úÖ Problem Solved:

### [1669. Merge In Between Linked Lists](https://leetcode.com/problems/merge-in-between-linked-lists/)
- Replaced a portion of `list1` from index `a` to `b` with `list2`.
- Traversed the list to locate nodes at `a-1` and `b+1`.
- Connected the start of list2 at position `a` and its end to position `b+1` in list1.

```cpp
class Solution {
public:
    ListNode* mergeInBetween(ListNode* list1, int a, int b, ListNode* list2) {
        ListNode* ta = list1;
        ListNode* tb = list1;

        for (int i = 1; i < a; i++) {
            ta = ta->next;
        }
        for (int i = 1; i <= b + 1; i++) {
            tb = tb->next;
        }

        ta->next = list2;
        ListNode* temp = list2;
        while (temp->next != NULL) {
            temp = temp->next;
        }
        temp->next = tb;
        return list1;
    }
};
```

---

## üß† Concepts Practiced:
- Linked list node manipulation
- Locating specific positions using loop
- Connecting list segments

---

## üõ†Ô∏è Language Used:
- C++

---

## üìå Reflection:
Managed to stay consistent even on a hectic college day. Will be busy tomorrow with presentations, so DSA focus will resume after that. Grateful for small wins.

---

#100DaysOfCode #DSA #CPP #LinkedList #LeetCode #GunjanCodes
