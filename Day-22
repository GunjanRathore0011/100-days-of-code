# ðŸš€ Day 21 - 100 Days of Code

## ðŸ“… Date:  
June 4, 2025

---

## âœ… Today's Progress:
- Solved 1 LeetCode problem:
  - âœ… [347. Top K Frequent Elements](https://leetcode.com/problems/top-k-frequent-elements/)

---

## ðŸ§  What I Learned:
- Practiced using hash maps to count frequency of elements.
- Used a min-heap (priority queue) to efficiently maintain top K frequent items.
- Reviewed STL containers like `unordered_map` and `priority_queue` for frequency-based problems.

---

## ðŸ§© Code Snippet:

### ðŸ”¹ 347. Top K Frequent Elements
```cpp
class Solution {
public:
    typedef pair<int,int> pi;
    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int,int> mp;
        for(int ele : nums){
            mp[ele]++;
        }
        priority_queue<pi,vector<pi>,greater<pi>> pq;
        for(auto x: mp){
            int ele=x.first, freq=x.second;
            pair<int,int> p={freq,ele};
            pq.push(p);
            if(pq.size()>k) pq.pop();
        }
        vector<int> ans;
        while(pq.size()>0){
            int ele=pq.top().second;
            ans.push_back(ele);
            pq.pop();
        }
        return ans;
    }
};
