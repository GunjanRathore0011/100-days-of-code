# ðŸš€ Day 26 - 100 Days of Code

## ðŸ“… Date:  
June 15, 2025

---

## âœ… Today's Progress:
- Solved 1 coding problem:
  - âœ… [1432. Max Difference You Can Get From Changing an Integer](https://leetcode.com/problems/max-difference-you-can-get-from-changing-an-integer/)

---

## ðŸ§  What I Learned:
- Applied string manipulation and greedy logic to compute maximum difference by replacing digits.
- Understood how changing digits from leftmost non-'9' and leading digits affects min/max results.
- Practiced edge case handling using custom conditions (like all-same-digit numbers).

---

## ðŸ§© Code Snippet:

```cpp
class Solution {
public:
    bool allSameChars(string s) {
        for (char c : s) {
            if (c != s[0]) return false;
        }
        return true;
    }

    int maxDiff(int num) {
        string str = to_string(num);
        string maxN = str;
        string minN = str;

        for (int i = 0; i < maxN.size(); i++) {
            if (maxN[i] != '9') {
                char c = maxN[i];
                replace(maxN.begin(), maxN.end(), c, '9');
                break;
            }
        }

        char c = minN[0];
        if (allSameChars(minN)) {
            replace(minN.begin(), minN.end(), c, '1');
        } else {
            if (minN[0] != '1') {
                char toReplace = minN[0];
                replace(minN.begin(), minN.end(), toReplace, '1');
            } else {
                for (int i = 1; i < minN.size(); i++) {
                    if (minN[i] != '0' && minN[i] != '1') {
                        char toReplace = minN[i];
                        replace(minN.begin(), minN.end(), toReplace, '0');
                        break;
                    }
                }
            }
        }

        int maxNum = stoi(maxN);
        int minNum = stoi(minN);
        return maxNum - minNum;
    }
};
