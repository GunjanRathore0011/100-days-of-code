
# ðŸ§  Day 55 of 100 Days of Code

Today I worked on problems related to **Graph Traversal (BFS)** and **Linked Lists** with binary conversion logic.

---

### âœ… 200. Number of Islands  
ðŸ”— [Leetcode Link](https://leetcode.com/problems/number-of-islands/)  
ðŸ§  **Concepts:** BFS, Graph Traversal, Grid Visitation

```cpp
class Solution {
private:
    void bfs(int row, int col, vector<vector<int>>& vis, vector<vector<char>>& grid) {
        int n = grid.size();
        int m = grid[0].size();
        queue<pair<int, int>> q;
        q.push({row, col});
        vis[row][col] = 1;

        int delrow[] = {-1, 0, 1, 0};
        int delcol[] = {0, 1, 0, -1};

        while (!q.empty()) {
            int r = q.front().first;
            int c = q.front().second;
            q.pop();

            for (int i = 0; i < 4; i++) {
                int nrow = r + delrow[i];
                int ncol = c + delcol[i];

                if (nrow >= 0 && nrow < n && ncol >= 0 && ncol < m &&
                    grid[nrow][ncol] == '1' && !vis[nrow][ncol]) {
                    vis[nrow][ncol] = 1;
                    q.push({nrow, ncol});
                }
            }
        }
    }

public:
    int numIslands(vector<vector<char>>& grid) {
        int n = grid.size();
        int m = grid[0].size();
        vector<vector<int>> vis(n, vector<int>(m, 0));
        int count = 0;

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (!vis[i][j] && grid[i][j] == '1') {
                    count++;
                    bfs(i, j, vis, grid);
                }
            }
        }

        return count;
    }
};
```

---

### âœ… 1290. Convert Binary Number in a Linked List to Integer  
ðŸ”— [Leetcode Link](https://leetcode.com/problems/convert-binary-number-in-a-linked-list-to-integer/)  
ðŸ§  **Concepts:** Linked List, Binary to Decimal Conversion

```cpp
class Solution {
public:
    int getDecimalValue(ListNode* head) {
        int num = 0;
        while (head) {
            num = num * 2 + head->val;
            head = head->next;
        }
        return num;
    }
};
```

---

ðŸ“… _Progress: Day 55/100_  
ðŸ’» _Keep up the grind â€“ every line of code builds your skill!_
