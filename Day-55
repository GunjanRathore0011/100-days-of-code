
# ðŸ§  Day 55 of 100 Days of Code

Today I worked on problems related to **Graph Traversal (BFS)** and **Linked Lists**.

---

### âœ… 200. Number of Islands  
ðŸ”— [Leetcode Link](https://leetcode.com/problems/number-of-islands/)  
ðŸ§  **Concepts:** BFS, Grid Traversal

```cpp
class Solution {
private:
    void bfs(int row, int col,vector<vector<int>>& vis ,vector<vector<char>>& grid ){
        int n=grid.size();
        int m=grid[0].size();
        queue<pair<int,int>> q;
        q.push({row,col});
        vis[row][col]=1;

        while(!q.empty()){
            int row=q.front().first;
            int col=q.front().second;
            q.pop();

            // traverse in the neighbours
            int delrow[]={-1,0,1,0};
            int delcol[]={0,1,0,-1};

            for(int i=0;i<4;i++){
                int nrow=row+delrow[i];
                int ncol=col+delcol[i];

                if(nrow>=0 && nrow<n && ncol>=0 && ncol<m && 
                grid[nrow][ncol]=='1' && !vis[nrow][ncol]){
                    vis[nrow][ncol]=1;
                    q.push({nrow,ncol});
                }
            }

        }
    }
public:
    int numIslands(vector<vector<char>>& grid) {
        int n=grid.size();
        int m=grid[0].size();
        int cnt=0;

        vector<vector<int>> vis(n,vector<int> (m,0));

        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(!vis[i][j] && grid[i][j]=='1'){
                    cnt++;
                    bfs(i,j,vis,grid);
                }
            }
        }
        return cnt;
    }
};
```

---

### âœ… 1290. Convert Binary Number in a Linked List to Integer  
ðŸ”— [Leetcode Link](https://leetcode.com/problems/convert-binary-number-in-a-linked-list-to-integer/)  
ðŸ§  **Concepts:** Linked List, Binary to Decimal

```cpp
class Solution {
public:
    int getDecimalValue(ListNode* head) {
        vector<int> v;
        ListNode* temp=head;
        while(temp){
            v.push_back(temp->val);
            temp=temp->next;
        }
        int n=v.size();
        int num=0;
        int val=1;
        for(int i=n-1;i>=0;i--){
            num+=v[i]*val;
            val*=2;
        }
        return num;
    }
};
```

---

ðŸ“… _Progress: Day 55/100_  
ðŸ’» _Keep up the grind â€“ every line of code builds your skill!_
